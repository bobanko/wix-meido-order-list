{"version":3,"sources":["webpack:///./src/components/worker.tsx","webpack:///./src/index.tsx","webpack:///./src/components/app.tsx"],"names":["worker_WorkerComponent","react","[object Object]","props","super","worker","this","nameAbbr","getAbbr","name","avatarEl","style","setProperty","getAvatarColor","str","a","b","match","toLowerCase","abbr","char1","charCodeAt","className","ref","el","order","title","react_dom","state","isLoading","workers","error","getOrders","params","setState","fetch","then","data","json","catch","location","search","currentDate","Date","toLocaleDateString","message","map","index","key","length","document","body","querySelector"],"mappings":"+IASaA,UAAwBC,EAAA,UAMnCC,YAAYC,GACVC,MAAMD,GACN,MAAME,OAAEA,GAAWC,KAAKH,MACxBG,KAAKC,SAAWD,KAAKE,QAAQH,EAAOI,MAGtCP,oBACEI,KAAKI,SAASC,MAAMC,YAClB,UACAN,KAAKO,eAAeP,KAAKC,WAI7BL,QAAQY,GACN,MACO,CAAEC,EAAGC,GAAKF,EAAIG,MADG,sBAExB,SAAUF,IAAIC,IAAIE,cAGpBhB,eAAeiB,GACb,MAAMC,EAAQD,EAAKE,WAAW,GAChBF,EAAKE,WAAW,GAS9B,cAJYD,EAHM,IAGe,GAAyB,gBAO5DlB,SACE,MAAMG,OAAEA,GAAWC,KAAKH,MAExB,OACEF,EAAA,qBAAKqB,UAAU,iBACbrB,EAAA,qBAAKqB,UAAU,KAAKC,IAAKC,GAAOlB,KAAKI,SAAWc,GAC7ClB,KAAKC,UAGRN,EAAA,qBAAKqB,UAAU,UACbrB,EAAA,qBAAKqB,UAAU,iBACbrB,EAAA,qBAAKqB,UAAU,gBAAgBjB,EAAOI,OAGxCR,EAAA,qBAAKqB,UAAU,SACbrB,EAAA,qBAAKqB,UAAU,eAAejB,EAAOoB,MAAMC,iBCzDvDC,EAAA,OACI1B,EAAA,4BCMqBA,EAAA,UAOvBC,YAAYC,GACVC,MAAMD,GAPRG,KAAAsB,OACEC,WAAW,EACXC,WACAC,MAAO,MAWTzB,KAAA0B,UAAYC,KACV3B,KAAK4B,UAAWL,WAAW,IAE3BM,iBAAiBF,KACdG,KAAKC,GAAQA,EAAKC,QAClBF,KAAKN,GAAWxB,KAAK4B,UAAWJ,aAChCS,MAAMR,GAASzB,KAAK4B,UAAWH,WAC/BK,KAAK,IAAM9B,KAAK4B,UAAWL,WAAW,OAX3C3B,oBACEI,KAAK0B,UAAUQ,SAASC,QAa1BvC,SACE,MAAM4B,QAAEA,EAAOD,UAAEA,EAASE,MAAEA,GAAUzB,KAAKsB,MACrCc,GAAc,IAAIC,MAAOC,qBAE/B,OACE3C,EAAA,yBACEA,EAAA,sCAAmByC,KAEnBzC,EAAA,qBAAKqB,UAAU,WACZS,GAAS9B,EAAA,yBAAM8B,EAAMc,SACrBhB,GAAa5B,EAAA,qBAAKqB,UAAU,UAAQ,cACpCQ,EAAQgB,IAAI,CAACzC,EAAQ0C,IACpB9C,EAAA,cAACD,GAAgBgD,IAAKD,EAAO1C,OAAQA,MAErCwB,GAAgC,IAAnBC,EAAQmB,QAAgBhD,EAAA,yCD7CzC,MACJiD,SAASC,KAAKC,cAAc","file":"main.bd1a77daf2e7bdf855dd.js","sourcesContent":["import * as React from \"react\";\n\nimport { Worker } from \"./types\";\nimport \"./worker.scss\";\n\nexport type Props = {\n  worker: Worker;\n};\n\nexport class WorkerComponent extends React.Component<Props> {\n  props: Props;\n\n  nameAbbr: String;\n  avatarEl: HTMLElement;\n\n  constructor(props) {\n    super(props);\n    const { worker } = this.props;\n    this.nameAbbr = this.getAbbr(worker.name);\n  }\n\n  componentDidMount() {\n    this.avatarEl.style.setProperty(\n      \"--color\",\n      this.getAvatarColor(this.nameAbbr)\n    );\n  }\n\n  getAbbr(str: String) {\n    const regex1stLetters = /(\\w)\\w+[\\W](\\w)\\w+/;\n    const [, a, b] = str.match(regex1stLetters);\n    return `${a}${b}`.toLowerCase();\n  }\n\n  getAvatarColor(abbr: String) {\n    const char1 = abbr.charCodeAt(0);\n    const char2 = abbr.charCodeAt(1);\n\n    const startChar = 97,\n      endChar = 122;\n\n    const h = ((char1 - startChar) / (endChar - startChar)) * 360,\n      s = 100,\n      l = 40;\n\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  render() {\n    const { worker } = this.props;\n\n    return (\n      <div className=\"worker fl-row\">\n        <div className=\"av\" ref={el => (this.avatarEl = el)}>\n          {this.nameAbbr}\n        </div>\n\n        <div className=\"fl-col\">\n          <div className=\"worker__title\">\n            <div className=\"worker__name\">{worker.name}</div>\n          </div>\n\n          <div className=\"order\">\n            <div className=\"order__name\">{worker.order.title}</div>\n            {/*<div className=\"order__contractor\">{worker.order.contractor}\n            </div>*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { App } from \"./components/app\";\n\n\nReactDOM.render(\n    <App/>,\n    document.body.querySelector('.app')\n);\n","import * as React from \"react\";\n\nimport { Worker } from \"./types\";\nimport { WorkerComponent } from \"./worker\";\n\nimport \"./app.scss\";\n\ntype State = {\n  workers: Array<Worker>;\n  isLoading: boolean;\n  error?: Error;\n};\n\nexport class App extends React.Component<any, State> {\n  state: State = {\n    isLoading: false,\n    workers: [],\n    error: null\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.getOrders(location.search);\n  }\n\n  getOrders = params => {\n    this.setState({ isLoading: true });\n\n    fetch(`/orders/${params}`)\n      .then(data => data.json())\n      .then(workers => this.setState({ workers }))\n      .catch(error => this.setState({ error }))\n      .then(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { workers, isLoading, error } = this.state;\n\n    const currentDate = new Date().toLocaleDateString();\n\n    return (\n      <div>\n        <h1>{`Orders for ${currentDate}`}</h1>\n\n        <div className=\"workers\">\n          {error && <div>{error.message}</div>}\n          {isLoading && <div className=\"loader\">Loading...</div>}\n          {workers.map((worker, index) => (\n            <WorkerComponent key={index} worker={worker} />\n          ))}\n          {!isLoading && workers.length === 0 && <h2>No orders</h2>}\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}